class TicketModel {
  late String name = "",
      checkIn = "",
      pickup_city = "",
      drop_city = "",
      booking_date = "",
      sub_total = "",
      tax = "",
      payThroughMPesa = "",
      boarding_point = "",
      status = "",
      company_name = "",
      layout_name = "",
      overall_rating = "",
      bus_type = "",
      booking_time = "",
      boarding_time_format = "",
      booking_reference = "",
      ticket_number = "",
      company_phone = "",
      boarding_time = "",
      schedulerDateTime = "",
      currency_code = "",
      seat_name = "",
      payment_method = "",
      arrival_time="";
  late int total_amount = 0, total = 0;

  TicketModel(
      {required this.name,
      required this.checkIn,
      required this.pickup_city,
      required this.drop_city,
      required this.booking_date,
      required this.sub_total,
      required this.tax,
      required this.payThroughMPesa,
      required this.boarding_point,
      required this.status,
      required this.company_name,
      required this.layout_name,
      required this.overall_rating,
      required this.bus_type,
      required this.booking_time,
      required this.boarding_time_format,
      required this.booking_reference,
      required this.ticket_number,
      required this.company_phone,
      required this.boarding_time,
      required this.schedulerDateTime,
      required this.currency_code,
      required this.seat_name,
      required this.payment_method,
      required this.total_amount,
      required this.total,
      required this.arrival_time});
  factory TicketModel.fromJson(Map<String, dynamic> responseData) {
      return TicketModel(name: responseData['name'],
          checkIn:responseData['checkIn'] ,
          pickup_city: responseData['pickup_city'],
          drop_city: responseData['drop_city'],
          booking_date: responseData['booking_date'],
          sub_total: responseData['sub_total'],
          tax: responseData['tax'],
          payThroughMPesa: responseData['payThroughMPesa'],
          boarding_point: responseData['boarding_point'],
          status: responseData['status'],
          company_name: responseData['company_name'],
          layout_name: responseData['layout_name'],
          overall_rating: responseData['overall_rating'],
          bus_type: responseData['bus_type'],
          booking_time: responseData['booking_time'],
          boarding_time_format: responseData['boarding_time_format'],
          booking_reference: responseData['booking_reference'],
          ticket_number: responseData['ticket_number'],
          company_phone: responseData['company_phone'],
          boarding_time: responseData['boarding_time'],
          schedulerDateTime: responseData['schedulerDateTime'],
          currency_code: responseData['currency_code'],
          seat_name: responseData['seat_name'],
          payment_method: responseData['payment_method'],
          total_amount: responseData['total_amount'],
          total: responseData['total'],
      arrival_time: responseData.containsKey('arrival_time')?responseData["arrival_time"]:'N/A');
  }
}
